// filename: sfunc_outer_loop.c
/* 
 * Filename: sfunc_outer_loop.c
 * Purpose: C-MEX S-function implementation of the outer control loop.
 */

// Inputs:
* Psi_Rd: [1] (dimension)
* n_ref: [1]
* n_m: [1]

// Block parameter input:
* f_a: [1] (sampling frequency)
* SC_KP, SC_KI, SC_KAW: [1] (PI-controller gains for flux-speed control)
* FC_KP, FC_KI, FC_KAW: [1] (PI-controller gains for flux current control)

// Output:
* i_Sd: [1]
* i_Sq: [1]

// Compile command:
mex sfunc_outer_loop.c speedandfluxcontroller.c

// defining global constants:
#define S_FUNCTION_NAME sfunc_outer_loop
#define S_FUNCTION_LEVEL 2

// Necessary S-function implementation
static void mdlInitializeSampleTimes(SimStruct *S) {
    ssSetSampleTime(S, 0, 1/f_a);
    ssSetOffsetTime(S, 0, 0 * (1/f_a)/2);
}

static void mdlOutputs(SimStruct *S, int_T tid) {
    real_T *iSd_out = ssGetOutputPortRealSignal(S, 0);
    real_T *iSq_out = ssGetOutputPortRealSignal(S, 1);
    InputRealPtrsType PSI_R = ssGetInputPortRealSignalPtrs(S, 0);
    InputRealPtrsType n_Nom = ssGetInputPortRealSignalPtrs(S, 1);
    InputRealPtrsType n_M = ssGetInputPortRealSignalPtrs(S, 2);

    // Declaration of variables
    real_T iSd = 0;
    real_T iSq = 0;

    real_T PSI_R1 = *PSI_R[0];
    real_T nNom1 = *n_Nom[0];
    real_T nM1 = *n_M[0];

    outerControlLoop(PSI_R1, nNom1, nM1, &iSd, &iSq);

    iSd_out[0] = iSd;
    iSq_out[0] = iSq;
}

static void mdlTerminate(SimStruct *S) {}
